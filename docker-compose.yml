version: "3.9"
services:
  gatewayapi:
    build:
      context: .
      dockerfile: ReverseProxy/Dockerfile
    ports:
      - "8000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
    depends_on:
      - adminservice
      - consumerservice
      - providerservice
    networks:
      - ev_network

  adminservice:
    build:
      context: .
      dockerfile: EV.AdminService.API/Dockerfile
    ports:
      - "8001:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__DefaultConnection: "Server=host.docker.internal,1433;Initial Catalog=EVDataAnalyticsMarketplaceDB;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False;TrustServerCertificate=True"
      JwtSettings__Key: "EO6btVJg8usIlHbCO6MPl4JfvH5pmej9ZTuzvNK4EOdhWTdMdg"
      JwtSettings__Issuer: "EVData.AdminAPI"
      JwtSettings__Audience: "EVDataClient"
    networks:
      - ev_network

  consumerservice:
    build:
      context: .
      dockerfile: EV.DataConsumerService.API/Dockerfile
    ports:
      - "8002:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
    networks:
      - ev_network

  providerservice:
    build:
      context: .
      dockerfile: EV.DataProviderService.API/Dockerfile
    ports:
      - "8003:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
    networks:
      - ev_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - ev_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    networks:
      - ev_network
    depends_on:
      - prometheus

networks:
  ev_network:
    driver: bridge
